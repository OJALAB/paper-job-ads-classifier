---
title: "R Notebook"
output: html_notebook
---

Packages

```{r}
library(data.table)
library(xtable)
library(stringr)
```

Official hierarchy

```{r}
hierachy <- fread("~/mac/nauka/oja-lab/job-ads-datasets/data/kzis-hierarchy-2023.tsv", colClasses = "character", sep = "\t")
hierachy6 <- hierachy[str_detect(class, "\\d{6}")]
head(hierachy, 10)
```

Table 3.1 from the paper

```{r}
hierachy[, .(digits2=uniqueN(substr(class[str_detect(class, "\\d{2}")], 1,2)),
             digits3=uniqueN(substr(class[str_detect(class, "\\d{3}")], 1,3)),
             digits4=uniqueN(substr(class[str_detect(class, "\\d{4}")], 1,4)),
             digits6=uniqueN(substr(class[str_detect(class, "\\d{6}")], 1,6)),
             digits6_no=uniqueN(substr(class[str_detect(class, "\\d{6}") & !str_detect(class, "90$")], 1,6)))
         , keyby=.(digit1=substr(class, 1, 1))] |>
  transform(digit1=factor(digit1, 0:9,
                          c("0 Armed forces", "1 Public authorities, senior officials and managers", "2 Professionals", 
                            "3 Technicians and associate professionals", "4 Clerical support workers", "5 Service and sales workers", 
                            "6 Farmers, gardeners, foresters and fishermen", "7 Craft and related trades workers", 
                            "8 Plant and machine operators and assemblers", "9 Blue collar workers"))) -> hierarchy_details

rbind(
  hierarchy_details,
  hierarchy_details[, lapply(.SD, sum), .SDcols = digits2:digits6_no][, digit1:="All"]
) |>
  xtable() |>
  print.xtable(include.rownames = F)
```

Read training and test datasets

```{r}
train_limited <- fread("~/mac/nauka/oja-lab/job-ads-datasets/data/train-test/train-data-source-2024.tar.gz", colClasses = "character")
test_limited <- fread("~/mac/nauka/oja-lab/job-ads-datasets/data/train-test/test-data-source-2024.tar.gz", colClasses = "character")
train_full <- fread("~/mac/nauka/oja-lab/job-ads-datasets/data/train-test/train-data-whole-source-2024.tar.gz", colClasses = "character")
test_full <- fread("~/mac/nauka/oja-lab/job-ads-datasets/data/train-test/test-data-whole-source-2024.tar.gz", colClasses = "character")

df_limited <- rbind(train_limited,test_limited)
df_full <- rbind(train_full,test_full)
rm(train_limited,test_limited,train_full,test_full)
```

General information on the data

```{r}
df_full[, .N, source][, id:=1] |>
  transform(source = factor(source, c("official", "info", "gus", "esco", "kprm", "hand", "hand1k", "cbop"))) |>
  dcast(id ~ source, value.var = "N") |>
  transform(cbop_l = sum(df_limited$source == "cbop"),
            id = NULL) |> 
  xtable() |>
  print.xtable(include.rownames = F, format.args = list(big.mark = ","))
```

Coverage of codes by sources and dataset (table 5.1)

```{r}
hierachy6[, esco :=  class %in% unique(df_limited$class[df_limited$source == "esco"])]
hierachy6[, gus :=  class %in% unique(df_limited$class[df_limited$source == "gus"])]
hierachy6[, info :=  class %in% unique(df_limited$class[df_limited$source == "info"])]
hierachy6[, kprm :=  class %in% unique(df_limited$class[df_limited$source == "kprm"])]
hierachy6[, hand :=  class %in% unique(df_limited$class[df_limited$source == "hand"])]
hierachy6[, hand1k :=  class %in% unique(df_limited$class[df_limited$source == "hand1k"])]
hierachy6[, cbop_l:= class %in% unique(df_limited$class[df_limited$source == "cbop"])]
hierachy6[, cbop_f:= class %in% unique(df_full$class[df_full$source == "cbop"])]

hierachy6[, all_l := (esco + gus + info + kprm + hand + hand1k + cbop_l) > 0]
hierachy6[, all_f := (esco + gus + info + kprm + hand + hand1k + cbop_f) > 0]

setcolorder(hierachy6, c("class", "name", "info", "gus", "esco", "kprm", "hand", "hand1k", "cbop_l", "cbop_f"))

hierachy6[, lapply(.SD, function(x) mean(x)*100),  keyby=.(digit1=substr(class,1,1)), .SDcols = info:all_f] |>
  xtable(digits=1) |>
  print.xtable(include.rownames = F)
```

Distribution of cases by class

```{r}
df1 <- df_limited[,.N, class][, N_cut := cut(N, breaks = c(1, 2, 3, 4, 5, 10, 25, 50, 100, 500, 1000, Inf), 
                                   labels = c(1, 2, 3, 4, "[5,10)", "[10, 25)", "[25, 50)", "[50, 100)", "[100, 500)", "[500, 1000)", "1000+"),
                                   include.lowest = T, ordered = T, right = F)][
  , .(n_codes=.N, n_obs=sum(N)), keyby=N_cut][
    , ":="(p_codes=n_codes/sum(n_codes)*100, p_obs = n_obs/sum(n_obs)*100)][
      , .(N_cut, n_codes, p_codes, n_obs, p_obs)]

df2 <- df_full[,.N, class][, N_cut := cut(N, breaks = c(1, 2, 3, 4, 5, 10, 25, 50, 100, 500, 1000, Inf), 
                                   labels = c(1, 2, 3, 4, "[5,10)", "[10, 25)", "[25, 50)", "[50, 100)", "[100, 500)", "[500, 1000)", "1000+"),
                                   include.lowest = T, ordered = T, right = F)][
  , .(n_codes=.N, n_obs=sum(N)), keyby=N_cut][
    , ":="(p_codes=n_codes/sum(n_codes)*100, p_obs = n_obs/sum(n_obs)*100)][
      , .(N_cut, n_codes_f=p_codes, p_codes_f=p_codes, n_obs_f=n_obs, p_obs_f=p_obs)] 

df1[df2, on = "N_cut"]|>
  xtable(digits=1) |>
  print.xtable(include.rownames = F, format.args = list(big.mark = ","))
```

Which are not covered by data source

```{r}
hierachy6[all_f == FALSE, .N, .(d1=substr(class,1,1))]
```

Number of characters by main groups 

```{r}
df_full[, n_chars:= str_count(desc, "\\w+")]
```

Table 5.3

```{r}
df_full[, as.list(summary(n_chars)), keyby=.(digit1=substr(class,1,1))] |>
  merge(x = _,
        y = df_full[,.N, keyby=.(digit1=substr(class,1,1))],
        by = "digit1") |>
  xtable(digits = 1) |>
  print.xtable(include.rownames = F, format.args = list(big.mark = ","))
```

Table for the appendix

```{r}
df_full[, as.list(summary(n_chars)), keyby=.(digit1=substr(class,1,1), source)]|>
    merge(x = _,
        y = df_full[,.N, keyby=.(digit1=substr(class,1,1), source)],
        by = c("digit1", "source")) |>
  xtable(digits = 1) |>
  print.xtable(include.rownames = F, format.args = list(big.mark = ","))
```

```{r}
df_full
```

